services:
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - billing
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
  billing:
    build:
      context: .
      dockerfile: ./apps/billing/Dockerfile
      target: development
    command: npm run start:dev billing
    env_file:
      - ./apps/billing/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - '3001:3001'
    env_file:
      - ./apps/auth/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  stock:
    build:
      context: .
      dockerfile: ./apps/stock/Dockerfile
      target: development
    command: npm run start:dev stock
    env_file:
      - ./apps/stock/.env
    depends_on:
      - stock-db
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3002:3002'

  inventory:
    build:
      context: .
      dockerfile: ./apps/inventory/Dockerfile
      target: development
    command: npm run start:dev inventory
    env_file:
      - ./apps/inventory/.env
    depends_on:
      - inventory-db
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3003:3003'

  rabbitmq:
    container_name: rabbitmq
    image: 'rabbitmq:3.8.1-management'
    hostname: rabbitmq
    restart: unless-stopped
    environment:
      RABBIT_DEFAULT_USER: "guest"
      RABBIT_DEFAULT_PASS: "guest"
      RABBIT_DEFAULT_VHOST: "/"
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - ./rabbitmq-data:/var/lib/data
      - ./rabbitmq-data/logs:/var/log/data
  mongodb-primary:
    image: docker.io/bitnami/mongodb:5.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    volumes:
      - 'mongodb_master_data:/bitnami/mongodb'
    ports:
      - '27017:27017'

  mongodb-secondary:
    image: docker.io/bitnami/mongodb:5.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongodb-arbiter:
    image: docker.io/bitnami/mongodb:5.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  stock-db:
    image: postgres:11
    container_name: stock-db
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: stock
    volumes:
      - stock-db-data:/var/lib/postgresql/data

  inventory-db:
    image: postgres:11
    container_name: inventory-db
    ports:
      - "5433:5432"
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: stock
    volumes:
      - inventory-db-data:/var/lib/postgresql/data

volumes:
  mongodb_master_data:
    driver: local
  stock-db-data:
    driver: local
  inventory-db-data:
    driver: local
